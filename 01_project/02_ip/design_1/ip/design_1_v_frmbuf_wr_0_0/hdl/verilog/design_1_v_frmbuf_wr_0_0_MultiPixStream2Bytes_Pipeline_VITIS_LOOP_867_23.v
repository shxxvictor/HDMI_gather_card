// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_867_23 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_empty_n,
        img_read,
        pix_val_V_25,
        pix_val_V_24,
        trunc_ln854_1,
        bytePlanes_01_din,
        bytePlanes_01_full_n,
        bytePlanes_01_write,
        icmp_ln857,
        cmp434_6,
        cmp434_5,
        cmp434_4,
        cmp434_3,
        cmp434_2,
        cmp434_1,
        sub432_cast203,
        cmp434,
        pix_val_V_57_out,
        pix_val_V_57_out_ap_vld,
        pix_val_V_56_out,
        pix_val_V_56_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] img_dout;
input   img_empty_n;
output   img_read;
input  [7:0] pix_val_V_25;
input  [7:0] pix_val_V_24;
input  [11:0] trunc_ln854_1;
output  [127:0] bytePlanes_01_din;
input   bytePlanes_01_full_n;
output   bytePlanes_01_write;
input  [0:0] icmp_ln857;
input  [0:0] cmp434_6;
input  [0:0] cmp434_5;
input  [0:0] cmp434_4;
input  [0:0] cmp434_3;
input  [0:0] cmp434_2;
input  [0:0] cmp434_1;
input  [11:0] sub432_cast203;
input  [0:0] cmp434;
output  [7:0] pix_val_V_57_out;
output   pix_val_V_57_out_ap_vld;
output  [7:0] pix_val_V_56_out;
output   pix_val_V_56_out_ap_vld;

reg ap_idle;
reg img_read;
reg bytePlanes_01_write;
reg pix_val_V_57_out_ap_vld;
reg pix_val_V_56_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln867_reg_618;
reg   [0:0] or_ln872_1_reg_642;
reg    ap_predicate_op55_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] or_ln872_6_reg_687;
reg    ap_predicate_op96_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    bytePlanes_01_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    img_blk_n;
reg   [0:0] or_ln872_reg_633;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln872_2_reg_661;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln872_3_reg_670;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln872_4_reg_679;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln872_5_reg_683;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln872_7_reg_691;
reg   [7:0] pix_val_V_7_reg_183;
reg   [7:0] pix_val_V_6_reg_193;
reg   [7:0] pix_val_V_11_reg_203;
reg   [7:0] pix_val_V_10_reg_214;
reg   [7:0] pix_val_V_15_reg_225;
reg   [7:0] pix_val_V_14_reg_236;
reg   [7:0] pix_val_V_19_reg_247;
reg   [7:0] pix_val_V_18_reg_258;
reg   [7:0] pix_val_V_23_reg_269;
reg   [7:0] pix_val_V_22_reg_280;
reg   [7:0] pix_val_V_29_reg_291;
reg   [7:0] pix_val_V_28_reg_302;
reg    ap_predicate_op44_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op71_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op82_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op103_read_state9;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_predicate_op63_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op89_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [0:0] icmp_ln867_fu_404_p2;
reg   [0:0] icmp_ln867_reg_618_pp0_iter1_reg;
wire   [0:0] cmp433_fu_420_p2;
reg   [0:0] cmp433_reg_622;
wire   [0:0] or_ln872_fu_426_p2;
wire   [7:0] pix_val_V_4_fu_437_p1;
wire   [0:0] or_ln872_1_fu_441_p2;
wire   [7:0] pix_val_V_8_fu_451_p1;
wire   [0:0] or_ln872_2_fu_455_p2;
wire   [7:0] pix_val_V_12_fu_459_p1;
wire   [0:0] or_ln872_3_fu_463_p2;
wire   [7:0] pix_val_V_16_fu_467_p1;
wire   [0:0] or_ln872_4_fu_471_p2;
wire   [0:0] or_ln872_5_fu_475_p2;
wire   [0:0] or_ln872_6_fu_479_p2;
wire   [0:0] or_ln872_7_fu_483_p2;
wire   [7:0] pix_val_V_20_fu_487_p1;
wire   [7:0] pix_val_V_26_fu_491_p1;
wire   [7:0] pix_val_V_30_fu_495_p1;
reg    ap_block_pp0_stage7_11001;
wire   [7:0] pix_val_V_34_fu_499_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_7_reg_183;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_6_reg_193;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_11_reg_203;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_10_reg_214;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_15_reg_225;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_14_reg_236;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_19_reg_247;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_18_reg_258;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_23_reg_269;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_22_reg_280;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_29_reg_291;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_29_reg_291;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_28_reg_302;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_28_reg_302;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_33_reg_313;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_33_reg_313;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_32_reg_323;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_32_reg_323;
reg   [7:0] ap_phi_mux_pix_val_V_37_phi_fu_336_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_37_reg_333;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_37_reg_333;
reg   [7:0] ap_phi_mux_pix_val_V_36_phi_fu_346_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_36_reg_343;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_36_reg_343;
reg   [11:0] x_fu_86;
wire   [11:0] x_2_fu_410_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_1;
reg   [7:0] pix_val_V_fu_90;
reg   [7:0] pix_val_V_1_fu_94;
reg    ap_block_pp0_stage1_01001;
wire   [12:0] zext_ln867_fu_416_p1;
wire  signed [12:0] sub432_cast203_cast_fu_382_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_687;
reg    ap_condition_691;
reg    ap_condition_694;
reg    ap_condition_697;
reg    ap_condition_700;
reg    ap_condition_703;
reg    ap_condition_706;
reg    ap_condition_709;
reg    ap_condition_712;
reg    ap_condition_715;
reg    ap_condition_399;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

design_1_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_691)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_10_reg_214 <= ap_phi_reg_pp0_iter0_pix_val_V_6_reg_193;
        end else if ((1'b1 == ap_condition_687)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_10_reg_214 <= pix_val_V_8_fu_451_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_691)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_11_reg_203 <= ap_phi_reg_pp0_iter0_pix_val_V_7_reg_183;
        end else if ((1'b1 == ap_condition_687)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_11_reg_203 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_697)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_14_reg_236 <= ap_phi_reg_pp0_iter0_pix_val_V_10_reg_214;
        end else if ((1'b1 == ap_condition_694)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_14_reg_236 <= pix_val_V_12_fu_459_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_697)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_15_reg_225 <= ap_phi_reg_pp0_iter0_pix_val_V_11_reg_203;
        end else if ((1'b1 == ap_condition_694)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_15_reg_225 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_703)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_18_reg_258 <= ap_phi_reg_pp0_iter0_pix_val_V_14_reg_236;
        end else if ((1'b1 == ap_condition_700)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_18_reg_258 <= pix_val_V_16_fu_467_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_703)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_19_reg_247 <= ap_phi_reg_pp0_iter0_pix_val_V_15_reg_225;
        end else if ((1'b1 == ap_condition_700)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_19_reg_247 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_709)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_22_reg_280 <= ap_phi_reg_pp0_iter0_pix_val_V_18_reg_258;
        end else if ((1'b1 == ap_condition_706)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_22_reg_280 <= pix_val_V_20_fu_487_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_709)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_23_reg_269 <= ap_phi_reg_pp0_iter0_pix_val_V_19_reg_247;
        end else if ((1'b1 == ap_condition_706)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_23_reg_269 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_715)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_6_reg_193 <= pix_val_V_fu_90;
        end else if ((1'b1 == ap_condition_712)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_6_reg_193 <= pix_val_V_4_fu_437_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_715)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_7_reg_183 <= pix_val_V_1_fu_94;
        end else if ((1'b1 == ap_condition_712)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_7_reg_183 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_399)) begin
        if (((icmp_ln867_reg_618 == 1'd0) & (or_ln872_5_reg_683 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_val_V_28_reg_302 <= ap_phi_reg_pp0_iter0_pix_val_V_22_reg_280;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_val_V_28_reg_302 <= ap_phi_reg_pp0_iter0_pix_val_V_28_reg_302;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_399)) begin
        if (((icmp_ln867_reg_618 == 1'd0) & (or_ln872_5_reg_683 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_val_V_29_reg_291 <= ap_phi_reg_pp0_iter0_pix_val_V_23_reg_269;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_val_V_29_reg_291 <= ap_phi_reg_pp0_iter0_pix_val_V_29_reg_291;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln872_6_reg_687 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_32_reg_323 <= ap_phi_reg_pp0_iter1_pix_val_V_28_reg_302;
    end else if (((or_ln872_6_reg_687 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_32_reg_323 <= pix_val_V_30_fu_495_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_32_reg_323 <= ap_phi_reg_pp0_iter0_pix_val_V_32_reg_323;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln872_6_reg_687 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_33_reg_313 <= ap_phi_reg_pp0_iter1_pix_val_V_29_reg_291;
    end else if (((or_ln872_6_reg_687 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_33_reg_313 <= {{img_dout[31:24]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_33_reg_313 <= ap_phi_reg_pp0_iter0_pix_val_V_33_reg_313;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln872_7_reg_691 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_36_reg_343 <= pix_val_V_34_fu_499_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_36_reg_343 <= ap_phi_reg_pp0_iter0_pix_val_V_36_reg_343;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln872_7_reg_691 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_37_reg_333 <= {{img_dout[31:24]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_37_reg_333 <= ap_phi_reg_pp0_iter0_pix_val_V_37_reg_333;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pix_val_V_1_fu_94 <= pix_val_V_25;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_val_V_1_fu_94 <= ap_phi_mux_pix_val_V_37_phi_fu_336_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pix_val_V_fu_90 <= pix_val_V_24;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_val_V_fu_90 <= ap_phi_mux_pix_val_V_36_phi_fu_346_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln867_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_86 <= x_2_fu_410_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_86 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln872_5_reg_683 == 1'd1))) begin
        ap_phi_reg_pp0_iter0_pix_val_V_28_reg_302 <= pix_val_V_26_fu_491_p1;
        ap_phi_reg_pp0_iter0_pix_val_V_29_reg_291 <= {{img_dout[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln867_fu_404_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp433_reg_622 <= cmp433_fu_420_p2;
        or_ln872_reg_633 <= or_ln872_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln867_reg_618 <= icmp_ln867_fu_404_p2;
        icmp_ln867_reg_618_pp0_iter1_reg <= icmp_ln867_reg_618;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln867_reg_618 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln872_1_reg_642 <= or_ln872_1_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln867_reg_618 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln872_2_reg_661 <= or_ln872_2_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln867_reg_618 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln872_3_reg_670 <= or_ln872_3_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln867_reg_618 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln872_4_reg_679 <= or_ln872_4_fu_471_p2;
        or_ln872_5_reg_683 <= or_ln872_5_fu_475_p2;
        or_ln872_6_reg_687 <= or_ln872_6_fu_479_p2;
        or_ln872_7_reg_691 <= or_ln872_7_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        pix_val_V_10_reg_214 <= ap_phi_reg_pp0_iter0_pix_val_V_10_reg_214;
        pix_val_V_11_reg_203 <= ap_phi_reg_pp0_iter0_pix_val_V_11_reg_203;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        pix_val_V_14_reg_236 <= ap_phi_reg_pp0_iter0_pix_val_V_14_reg_236;
        pix_val_V_15_reg_225 <= ap_phi_reg_pp0_iter0_pix_val_V_15_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        pix_val_V_18_reg_258 <= ap_phi_reg_pp0_iter0_pix_val_V_18_reg_258;
        pix_val_V_19_reg_247 <= ap_phi_reg_pp0_iter0_pix_val_V_19_reg_247;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        pix_val_V_22_reg_280 <= ap_phi_reg_pp0_iter0_pix_val_V_22_reg_280;
        pix_val_V_23_reg_269 <= ap_phi_reg_pp0_iter0_pix_val_V_23_reg_269;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pix_val_V_28_reg_302 <= ap_phi_reg_pp0_iter1_pix_val_V_28_reg_302;
        pix_val_V_29_reg_291 <= ap_phi_reg_pp0_iter1_pix_val_V_29_reg_291;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        pix_val_V_6_reg_193 <= ap_phi_reg_pp0_iter0_pix_val_V_6_reg_193;
        pix_val_V_7_reg_183 <= ap_phi_reg_pp0_iter0_pix_val_V_7_reg_183;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln867_reg_618 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln867_reg_618_pp0_iter1_reg == 1'd0) & (or_ln872_7_reg_691 == 1'd0))) begin
        ap_phi_mux_pix_val_V_36_phi_fu_346_p4 = ap_phi_reg_pp0_iter1_pix_val_V_32_reg_323;
    end else begin
        ap_phi_mux_pix_val_V_36_phi_fu_346_p4 = ap_phi_reg_pp0_iter1_pix_val_V_36_reg_343;
    end
end

always @ (*) begin
    if (((icmp_ln867_reg_618_pp0_iter1_reg == 1'd0) & (or_ln872_7_reg_691 == 1'd0))) begin
        ap_phi_mux_pix_val_V_37_phi_fu_336_p4 = ap_phi_reg_pp0_iter1_pix_val_V_33_reg_313;
    end else begin
        ap_phi_mux_pix_val_V_37_phi_fu_336_p4 = ap_phi_reg_pp0_iter1_pix_val_V_37_reg_333;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_01_blk_n = bytePlanes_01_full_n;
    end else begin
        bytePlanes_01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_01_write = 1'b1;
    end else begin
        bytePlanes_01_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op96_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln872_7_reg_691 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln872_5_reg_683 == 1'd1)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln872_4_reg_679 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln872_3_reg_670 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln872_2_reg_661 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (ap_predicate_op55_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln867_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln872_reg_633 == 1'd1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op96_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op89_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op63_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op103_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op82_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op55_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op44_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln867_reg_618 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pix_val_V_56_out_ap_vld = 1'b1;
    end else begin
        pix_val_V_56_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln867_reg_618 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pix_val_V_57_out_ap_vld = 1'b1;
    end else begin
        pix_val_V_57_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op103_read_state9 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op103_read_state9 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op44_read_state2 == 1'b1)) | ((bytePlanes_01_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op44_read_state2 == 1'b1)) | ((bytePlanes_01_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op44_read_state2 == 1'b1)) | ((bytePlanes_01_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_predicate_op55_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_predicate_op55_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op63_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op63_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state5 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op82_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op82_read_state6 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op89_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op89_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_predicate_op96_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_predicate_op96_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = (bytePlanes_01_full_n == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op44_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op55_read_state3 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op63_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op71_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op82_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op89_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op96_read_state8 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((img_empty_n == 1'b0) & (ap_predicate_op103_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_399 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_687 = ((1'b0 == ap_block_pp0_stage2_11001) & (or_ln872_1_reg_642 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_691 = ((1'b0 == ap_block_pp0_stage3_11001) & (or_ln872_1_reg_642 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_694 = ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln872_2_reg_661 == 1'd1));
end

always @ (*) begin
    ap_condition_697 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln872_2_reg_661 == 1'd0));
end

always @ (*) begin
    ap_condition_700 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln872_3_reg_670 == 1'd1));
end

always @ (*) begin
    ap_condition_703 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln872_3_reg_670 == 1'd0));
end

always @ (*) begin
    ap_condition_706 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln872_4_reg_679 == 1'd1));
end

always @ (*) begin
    ap_condition_709 = ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln872_4_reg_679 == 1'd0));
end

always @ (*) begin
    ap_condition_712 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln872_reg_633 == 1'd1));
end

always @ (*) begin
    ap_condition_715 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln872_reg_633 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_pix_val_V_32_reg_323 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_33_reg_313 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_36_reg_343 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_37_reg_333 = 'bx;

always @ (*) begin
    ap_predicate_op103_read_state9 = ((icmp_ln867_reg_618 == 1'd0) & (or_ln872_7_reg_691 == 1'd1));
end

always @ (*) begin
    ap_predicate_op44_read_state2 = ((icmp_ln867_reg_618 == 1'd0) & (or_ln872_reg_633 == 1'd1));
end

always @ (*) begin
    ap_predicate_op55_read_state3 = ((or_ln872_1_reg_642 == 1'd1) & (icmp_ln867_reg_618 == 1'd0));
end

always @ (*) begin
    ap_predicate_op63_read_state4 = ((icmp_ln867_reg_618 == 1'd0) & (or_ln872_2_reg_661 == 1'd1));
end

always @ (*) begin
    ap_predicate_op71_read_state5 = ((icmp_ln867_reg_618 == 1'd0) & (or_ln872_3_reg_670 == 1'd1));
end

always @ (*) begin
    ap_predicate_op82_read_state6 = ((icmp_ln867_reg_618 == 1'd0) & (or_ln872_4_reg_679 == 1'd1));
end

always @ (*) begin
    ap_predicate_op89_read_state7 = ((icmp_ln867_reg_618 == 1'd0) & (or_ln872_5_reg_683 == 1'd1));
end

always @ (*) begin
    ap_predicate_op96_read_state8 = ((or_ln872_6_reg_687 == 1'd1) & (icmp_ln867_reg_618 == 1'd0));
end

assign bytePlanes_01_din = {{{{{{{{{{{{{{{{ap_phi_mux_pix_val_V_37_phi_fu_336_p4}, {ap_phi_mux_pix_val_V_36_phi_fu_346_p4}}, {ap_phi_reg_pp0_iter1_pix_val_V_33_reg_313}}, {ap_phi_reg_pp0_iter1_pix_val_V_32_reg_323}}, {pix_val_V_29_reg_291}}, {pix_val_V_28_reg_302}}, {pix_val_V_23_reg_269}}, {pix_val_V_22_reg_280}}, {pix_val_V_19_reg_247}}, {pix_val_V_18_reg_258}}, {pix_val_V_15_reg_225}}, {pix_val_V_14_reg_236}}, {pix_val_V_11_reg_203}}, {pix_val_V_10_reg_214}}, {pix_val_V_7_reg_183}}, {pix_val_V_6_reg_193}};

assign cmp433_fu_420_p2 = (($signed(zext_ln867_fu_416_p1) < $signed(sub432_cast203_cast_fu_382_p1)) ? 1'b1 : 1'b0);

assign icmp_ln867_fu_404_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln854_1) ? 1'b1 : 1'b0);

assign or_ln872_1_fu_441_p2 = (cmp434_1 | cmp433_reg_622);

assign or_ln872_2_fu_455_p2 = (cmp434_2 | cmp433_reg_622);

assign or_ln872_3_fu_463_p2 = (cmp434_3 | cmp433_reg_622);

assign or_ln872_4_fu_471_p2 = (cmp434_4 | cmp433_reg_622);

assign or_ln872_5_fu_475_p2 = (cmp434_5 | cmp433_reg_622);

assign or_ln872_6_fu_479_p2 = (cmp434_6 | cmp433_reg_622);

assign or_ln872_7_fu_483_p2 = (icmp_ln857 | cmp433_reg_622);

assign or_ln872_fu_426_p2 = (cmp434 | cmp433_fu_420_p2);

assign pix_val_V_12_fu_459_p1 = img_dout[7:0];

assign pix_val_V_16_fu_467_p1 = img_dout[7:0];

assign pix_val_V_20_fu_487_p1 = img_dout[7:0];

assign pix_val_V_26_fu_491_p1 = img_dout[7:0];

assign pix_val_V_30_fu_495_p1 = img_dout[7:0];

assign pix_val_V_34_fu_499_p1 = img_dout[7:0];

assign pix_val_V_4_fu_437_p1 = img_dout[7:0];

assign pix_val_V_56_out = pix_val_V_fu_90;

assign pix_val_V_57_out = pix_val_V_1_fu_94;

assign pix_val_V_8_fu_451_p1 = img_dout[7:0];

assign sub432_cast203_cast_fu_382_p1 = $signed(sub432_cast203);

assign x_2_fu_410_p2 = (ap_sig_allocacmp_x_1 + 12'd1);

assign zext_ln867_fu_416_p1 = ap_sig_allocacmp_x_1;

endmodule //design_1_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_867_23
