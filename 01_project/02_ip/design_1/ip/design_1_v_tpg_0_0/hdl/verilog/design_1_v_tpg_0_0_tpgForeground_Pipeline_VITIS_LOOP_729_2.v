// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_tpg_0_0_tpgForeground_Pipeline_VITIS_LOOP_729_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bckgndYUV_dout,
        bckgndYUV_empty_n,
        bckgndYUV_read,
        ovrlayYUV_din,
        ovrlayYUV_full_n,
        ovrlayYUV_write,
        loopWidth,
        and4_i,
        and24_i,
        tobool,
        and10_i,
        ovrlayId_load,
        y,
        loopHeight,
        boxSize_load,
        boxColorR_load_cast,
        boxColorG_load_cast,
        boxColorB_load_cast,
        motionSpeed_load,
        color,
        crossHairX_1,
        cmp2_i,
        conv_i_i,
        select_ln1929
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] bckgndYUV_dout;
input   bckgndYUV_empty_n;
output   bckgndYUV_read;
output  [47:0] ovrlayYUV_din;
input   ovrlayYUV_full_n;
output   ovrlayYUV_write;
input  [15:0] loopWidth;
input  [0:0] and4_i;
input  [0:0] and24_i;
input  [0:0] tobool;
input  [0:0] and10_i;
input  [7:0] ovrlayId_load;
input  [15:0] y;
input  [15:0] loopHeight;
input  [15:0] boxSize_load;
input  [7:0] boxColorR_load_cast;
input  [7:0] boxColorG_load_cast;
input  [7:0] boxColorB_load_cast;
input  [7:0] motionSpeed_load;
input  [7:0] color;
input  [15:0] crossHairX_1;
input  [0:0] cmp2_i;
input  [7:0] conv_i_i;
input  [7:0] select_ln1929;

reg ap_idle;
reg bckgndYUV_read;
reg ovrlayYUV_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln729_reg_706;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln729_fu_341_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ovrlayYUV_blk_n;
wire    ap_block_pp0_stage0;
reg    bckgndYUV_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] ovrlayId_load_read_read_fu_190_p2;
reg   [15:0] x_2_reg_701;
reg   [0:0] icmp_ln729_reg_706_pp0_iter1_reg;
reg   [0:0] icmp_ln729_reg_706_pp0_iter2_reg;
reg   [0:0] icmp_ln729_reg_706_pp0_iter3_reg;
wire   [0:0] or_ln1918_fu_353_p2;
reg   [0:0] or_ln1918_reg_710;
reg   [0:0] or_ln1918_reg_710_pp0_iter1_reg;
reg   [0:0] or_ln1918_reg_710_pp0_iter2_reg;
reg   [0:0] or_ln1918_reg_710_pp0_iter3_reg;
wire   [0:0] or_ln1918_2_fu_371_p2;
reg   [0:0] or_ln1918_2_reg_717;
reg   [0:0] or_ln1918_2_reg_717_pp0_iter1_reg;
reg   [0:0] or_ln1918_2_reg_717_pp0_iter2_reg;
reg   [0:0] or_ln1918_2_reg_717_pp0_iter3_reg;
wire   [7:0] pixIn_val_V_fu_388_p1;
reg   [7:0] pixIn_val_V_reg_724;
reg   [7:0] pixIn_val_V_reg_724_pp0_iter2_reg;
reg   [7:0] pixIn_val_V_reg_724_pp0_iter3_reg;
reg   [7:0] pixIn_val_V_1_reg_731;
reg   [7:0] pixIn_val_V_1_reg_731_pp0_iter2_reg;
reg   [7:0] pixIn_val_V_1_reg_731_pp0_iter3_reg;
reg   [7:0] pixIn_val_V_2_reg_738;
reg   [7:0] pixIn_val_V_2_reg_738_pp0_iter2_reg;
reg   [7:0] pixIn_val_V_2_reg_738_pp0_iter3_reg;
reg   [7:0] pixIn_val_V_3_reg_745;
reg   [7:0] pixIn_val_V_3_reg_745_pp0_iter2_reg;
reg   [7:0] pixIn_val_V_3_reg_745_pp0_iter3_reg;
reg   [7:0] pixIn_val_V_4_reg_752;
reg   [7:0] pixIn_val_V_4_reg_752_pp0_iter2_reg;
reg   [7:0] pixIn_val_V_4_reg_752_pp0_iter3_reg;
reg   [7:0] pixIn_val_V_5_reg_759;
reg   [7:0] pixIn_val_V_5_reg_759_pp0_iter2_reg;
reg   [7:0] pixIn_val_V_5_reg_759_pp0_iter3_reg;
wire   [7:0] select_ln1918_fu_472_p3;
wire   [7:0] select_ln1918_1_fu_477_p3;
wire   [7:0] select_ln1918_2_fu_482_p3;
wire   [7:0] select_ln1918_3_fu_488_p3;
wire   [7:0] select_ln1918_4_fu_493_p3;
wire   [7:0] select_ln1918_5_fu_498_p3;
wire    grp_tpgPatternBox_fu_305_ap_start;
wire    grp_tpgPatternBox_fu_305_ap_done;
wire    grp_tpgPatternBox_fu_305_ap_idle;
wire    grp_tpgPatternBox_fu_305_ap_ready;
reg    grp_tpgPatternBox_fu_305_ap_ce;
wire   [7:0] grp_tpgPatternBox_fu_305_pixIn;
wire   [7:0] grp_tpgPatternBox_fu_305_pixIn6;
wire   [7:0] grp_tpgPatternBox_fu_305_pixIn7;
wire   [7:0] grp_tpgPatternBox_fu_305_pixIn8;
wire   [7:0] grp_tpgPatternBox_fu_305_pixIn9;
wire   [7:0] grp_tpgPatternBox_fu_305_pixIn10;
wire   [7:0] grp_tpgPatternBox_fu_305_ap_return_0;
wire   [7:0] grp_tpgPatternBox_fu_305_ap_return_1;
wire   [7:0] grp_tpgPatternBox_fu_305_ap_return_2;
wire   [7:0] grp_tpgPatternBox_fu_305_ap_return_3;
wire   [7:0] grp_tpgPatternBox_fu_305_ap_return_4;
wire   [7:0] grp_tpgPatternBox_fu_305_ap_return_5;
reg    ap_predicate_op52_call_state2;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call0;
reg    ap_block_state2_pp0_stage0_iter1_ignore_call0;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call0;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call0;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call0;
reg    ap_block_state6_pp0_stage0_iter5_ignore_call0;
reg    ap_block_pp0_stage0_11001_ignoreCallOp52;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_5_reg_239;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_5_reg_239;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_5_reg_239;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_5_reg_239;
reg   [7:0] ap_phi_reg_pp0_iter4_pix_val_V_5_reg_239;
reg   [7:0] ap_phi_reg_pp0_iter5_pix_val_V_5_reg_239;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_reg_250;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_4_reg_250;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_4_reg_250;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_4_reg_250;
reg   [7:0] ap_phi_reg_pp0_iter4_pix_val_V_4_reg_250;
reg   [7:0] ap_phi_reg_pp0_iter5_pix_val_V_4_reg_250;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_reg_261;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_3_reg_261;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_3_reg_261;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_3_reg_261;
reg   [7:0] ap_phi_reg_pp0_iter4_pix_val_V_3_reg_261;
reg   [7:0] ap_phi_reg_pp0_iter5_pix_val_V_3_reg_261;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_2_reg_272;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_2_reg_272;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_2_reg_272;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_2_reg_272;
reg   [7:0] ap_phi_reg_pp0_iter4_pix_val_V_2_reg_272;
reg   [7:0] ap_phi_reg_pp0_iter5_pix_val_V_2_reg_272;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_reg_283;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_1_reg_283;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_1_reg_283;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_1_reg_283;
reg   [7:0] ap_phi_reg_pp0_iter4_pix_val_V_1_reg_283;
reg   [7:0] ap_phi_reg_pp0_iter5_pix_val_V_1_reg_283;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_reg_294;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_reg_294;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_reg_294;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_reg_294;
reg   [7:0] ap_phi_reg_pp0_iter4_pix_val_V_reg_294;
reg   [7:0] ap_phi_reg_pp0_iter5_pix_val_V_reg_294;
reg    grp_tpgPatternBox_fu_305_ap_start_reg;
reg    ap_predicate_op52_call_state2_state1;
reg   [15:0] x_fu_114;
wire   [15:0] x_3_fu_377_p2;
wire    ap_loop_init;
reg   [15:0] ap_sig_allocacmp_x_2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln1918_fu_347_p2;
wire   [15:0] or_ln1918_1_fu_359_p2;
wire   [0:0] icmp_ln1918_1_fu_365_p2;
wire   [7:0] select_ln1948_fu_511_p3;
wire   [7:0] select_ln1944_fu_504_p3;
wire   [7:0] select_ln1946_fu_532_p3;
wire   [7:0] select_ln1944_1_fu_546_p3;
wire   [7:0] select_ln1948_1_fu_560_p3;
wire   [7:0] select_ln1946_1_fu_574_p3;
wire   [7:0] p_0_5_0_0_0170_fu_518_p3;
wire   [7:0] empty_fu_539_p3;
wire   [7:0] empty_67_fu_553_p3;
wire   [7:0] empty_68_fu_567_p3;
wire   [7:0] empty_69_fu_581_p3;
wire   [7:0] p_0_0_0_0_0160_fu_525_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_352;
reg    ap_condition_336;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 grp_tpgPatternBox_fu_305_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

design_1_v_tpg_0_0_tpgPatternBox grp_tpgPatternBox_fu_305(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_tpgPatternBox_fu_305_ap_start),
    .ap_done(grp_tpgPatternBox_fu_305_ap_done),
    .ap_idle(grp_tpgPatternBox_fu_305_ap_idle),
    .ap_ready(grp_tpgPatternBox_fu_305_ap_ready),
    .ap_ce(grp_tpgPatternBox_fu_305_ap_ce),
    .pixIn(grp_tpgPatternBox_fu_305_pixIn),
    .pixIn6(grp_tpgPatternBox_fu_305_pixIn6),
    .pixIn7(grp_tpgPatternBox_fu_305_pixIn7),
    .pixIn8(grp_tpgPatternBox_fu_305_pixIn8),
    .pixIn9(grp_tpgPatternBox_fu_305_pixIn9),
    .pixIn10(grp_tpgPatternBox_fu_305_pixIn10),
    .y(y),
    .x(x_2_reg_701),
    .width(loopWidth),
    .height(loopHeight),
    .boxSize(boxSize_load),
    .boxColorR(boxColorR_load_cast),
    .boxColorG(boxColorG_load_cast),
    .boxColorB(boxColorB_load_cast),
    .motionSpeed(motionSpeed_load),
    .color(color),
    .ap_return_0(grp_tpgPatternBox_fu_305_ap_return_0),
    .ap_return_1(grp_tpgPatternBox_fu_305_ap_return_1),
    .ap_return_2(grp_tpgPatternBox_fu_305_ap_return_2),
    .ap_return_3(grp_tpgPatternBox_fu_305_ap_return_3),
    .ap_return_4(grp_tpgPatternBox_fu_305_ap_return_4),
    .ap_return_5(grp_tpgPatternBox_fu_305_ap_return_5)
);

design_1_v_tpg_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_tpgPatternBox_fu_305_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op52_call_state2_state1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_tpgPatternBox_fu_305_ap_start_reg <= 1'b1;
        end else if ((grp_tpgPatternBox_fu_305_ap_ready == 1'b1)) begin
            grp_tpgPatternBox_fu_305_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((1'b1 == ap_condition_352)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_1_reg_283 <= {{bckgndYUV_dout[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_1_reg_283 <= ap_phi_reg_pp0_iter1_pix_val_V_1_reg_283;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((1'b1 == ap_condition_352)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_2_reg_272 <= {{bckgndYUV_dout[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_2_reg_272 <= ap_phi_reg_pp0_iter1_pix_val_V_2_reg_272;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((1'b1 == ap_condition_352)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_3_reg_261 <= {{bckgndYUV_dout[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_3_reg_261 <= ap_phi_reg_pp0_iter1_pix_val_V_3_reg_261;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((1'b1 == ap_condition_352)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_4_reg_250 <= {{bckgndYUV_dout[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_4_reg_250 <= ap_phi_reg_pp0_iter1_pix_val_V_4_reg_250;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((1'b1 == ap_condition_352)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_5_reg_239 <= {{bckgndYUV_dout[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_5_reg_239 <= ap_phi_reg_pp0_iter1_pix_val_V_5_reg_239;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((1'b1 == ap_condition_352)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_reg_294 <= pixIn_val_V_fu_388_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_reg_294 <= ap_phi_reg_pp0_iter1_pix_val_V_reg_294;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load_read_read_fu_190_p2 == 8'd2))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_1_reg_283 <= select_ln1918_1_fu_477_p3;
        end else if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load == 8'd1))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_1_reg_283 <= grp_tpgPatternBox_fu_305_ap_return_1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_pix_val_V_1_reg_283 <= ap_phi_reg_pp0_iter4_pix_val_V_1_reg_283;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load_read_read_fu_190_p2 == 8'd2))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_2_reg_272 <= select_ln1918_fu_472_p3;
        end else if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load == 8'd1))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_2_reg_272 <= grp_tpgPatternBox_fu_305_ap_return_2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_pix_val_V_2_reg_272 <= ap_phi_reg_pp0_iter4_pix_val_V_2_reg_272;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load_read_read_fu_190_p2 == 8'd2))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_3_reg_261 <= select_ln1918_5_fu_498_p3;
        end else if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load == 8'd1))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_3_reg_261 <= grp_tpgPatternBox_fu_305_ap_return_3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_pix_val_V_3_reg_261 <= ap_phi_reg_pp0_iter4_pix_val_V_3_reg_261;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load_read_read_fu_190_p2 == 8'd2))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_4_reg_250 <= select_ln1918_4_fu_493_p3;
        end else if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load == 8'd1))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_4_reg_250 <= grp_tpgPatternBox_fu_305_ap_return_4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_pix_val_V_4_reg_250 <= ap_phi_reg_pp0_iter4_pix_val_V_4_reg_250;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load_read_read_fu_190_p2 == 8'd2))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_5_reg_239 <= select_ln1918_3_fu_488_p3;
        end else if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load == 8'd1))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_5_reg_239 <= grp_tpgPatternBox_fu_305_ap_return_5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_pix_val_V_5_reg_239 <= ap_phi_reg_pp0_iter4_pix_val_V_5_reg_239;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load_read_read_fu_190_p2 == 8'd2))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_reg_294 <= select_ln1918_2_fu_482_p3;
        end else if (((icmp_ln729_reg_706_pp0_iter3_reg == 1'd1) & (ovrlayId_load == 8'd1))) begin
            ap_phi_reg_pp0_iter5_pix_val_V_reg_294 <= grp_tpgPatternBox_fu_305_ap_return_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_pix_val_V_reg_294 <= ap_phi_reg_pp0_iter4_pix_val_V_reg_294;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln729_fu_341_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_114 <= x_3_fu_377_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_114 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln729_reg_706 <= icmp_ln729_fu_341_p2;
        icmp_ln729_reg_706_pp0_iter1_reg <= icmp_ln729_reg_706;
        or_ln1918_2_reg_717_pp0_iter1_reg <= or_ln1918_2_reg_717;
        or_ln1918_reg_710_pp0_iter1_reg <= or_ln1918_reg_710;
        x_2_reg_701 <= ap_sig_allocacmp_x_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln729_reg_706_pp0_iter2_reg <= icmp_ln729_reg_706_pp0_iter1_reg;
        icmp_ln729_reg_706_pp0_iter3_reg <= icmp_ln729_reg_706_pp0_iter2_reg;
        or_ln1918_2_reg_717_pp0_iter2_reg <= or_ln1918_2_reg_717_pp0_iter1_reg;
        or_ln1918_2_reg_717_pp0_iter3_reg <= or_ln1918_2_reg_717_pp0_iter2_reg;
        or_ln1918_reg_710_pp0_iter2_reg <= or_ln1918_reg_710_pp0_iter1_reg;
        or_ln1918_reg_710_pp0_iter3_reg <= or_ln1918_reg_710_pp0_iter2_reg;
        pixIn_val_V_1_reg_731_pp0_iter2_reg <= pixIn_val_V_1_reg_731;
        pixIn_val_V_1_reg_731_pp0_iter3_reg <= pixIn_val_V_1_reg_731_pp0_iter2_reg;
        pixIn_val_V_2_reg_738_pp0_iter2_reg <= pixIn_val_V_2_reg_738;
        pixIn_val_V_2_reg_738_pp0_iter3_reg <= pixIn_val_V_2_reg_738_pp0_iter2_reg;
        pixIn_val_V_3_reg_745_pp0_iter2_reg <= pixIn_val_V_3_reg_745;
        pixIn_val_V_3_reg_745_pp0_iter3_reg <= pixIn_val_V_3_reg_745_pp0_iter2_reg;
        pixIn_val_V_4_reg_752_pp0_iter2_reg <= pixIn_val_V_4_reg_752;
        pixIn_val_V_4_reg_752_pp0_iter3_reg <= pixIn_val_V_4_reg_752_pp0_iter2_reg;
        pixIn_val_V_5_reg_759_pp0_iter2_reg <= pixIn_val_V_5_reg_759;
        pixIn_val_V_5_reg_759_pp0_iter3_reg <= pixIn_val_V_5_reg_759_pp0_iter2_reg;
        pixIn_val_V_reg_724_pp0_iter2_reg <= pixIn_val_V_reg_724;
        pixIn_val_V_reg_724_pp0_iter3_reg <= pixIn_val_V_reg_724_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_1_reg_283 <= ap_phi_reg_pp0_iter0_pix_val_V_1_reg_283;
        ap_phi_reg_pp0_iter1_pix_val_V_2_reg_272 <= ap_phi_reg_pp0_iter0_pix_val_V_2_reg_272;
        ap_phi_reg_pp0_iter1_pix_val_V_3_reg_261 <= ap_phi_reg_pp0_iter0_pix_val_V_3_reg_261;
        ap_phi_reg_pp0_iter1_pix_val_V_4_reg_250 <= ap_phi_reg_pp0_iter0_pix_val_V_4_reg_250;
        ap_phi_reg_pp0_iter1_pix_val_V_5_reg_239 <= ap_phi_reg_pp0_iter0_pix_val_V_5_reg_239;
        ap_phi_reg_pp0_iter1_pix_val_V_reg_294 <= ap_phi_reg_pp0_iter0_pix_val_V_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_1_reg_283 <= ap_phi_reg_pp0_iter2_pix_val_V_1_reg_283;
        ap_phi_reg_pp0_iter3_pix_val_V_2_reg_272 <= ap_phi_reg_pp0_iter2_pix_val_V_2_reg_272;
        ap_phi_reg_pp0_iter3_pix_val_V_3_reg_261 <= ap_phi_reg_pp0_iter2_pix_val_V_3_reg_261;
        ap_phi_reg_pp0_iter3_pix_val_V_4_reg_250 <= ap_phi_reg_pp0_iter2_pix_val_V_4_reg_250;
        ap_phi_reg_pp0_iter3_pix_val_V_5_reg_239 <= ap_phi_reg_pp0_iter2_pix_val_V_5_reg_239;
        ap_phi_reg_pp0_iter3_pix_val_V_reg_294 <= ap_phi_reg_pp0_iter2_pix_val_V_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_pix_val_V_1_reg_283 <= ap_phi_reg_pp0_iter3_pix_val_V_1_reg_283;
        ap_phi_reg_pp0_iter4_pix_val_V_2_reg_272 <= ap_phi_reg_pp0_iter3_pix_val_V_2_reg_272;
        ap_phi_reg_pp0_iter4_pix_val_V_3_reg_261 <= ap_phi_reg_pp0_iter3_pix_val_V_3_reg_261;
        ap_phi_reg_pp0_iter4_pix_val_V_4_reg_250 <= ap_phi_reg_pp0_iter3_pix_val_V_4_reg_250;
        ap_phi_reg_pp0_iter4_pix_val_V_5_reg_239 <= ap_phi_reg_pp0_iter3_pix_val_V_5_reg_239;
        ap_phi_reg_pp0_iter4_pix_val_V_reg_294 <= ap_phi_reg_pp0_iter3_pix_val_V_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln729_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ovrlayId_load_read_read_fu_190_p2 == 8'd2))) begin
        or_ln1918_2_reg_717 <= or_ln1918_2_fu_371_p2;
        or_ln1918_reg_710 <= or_ln1918_fu_353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_706 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pixIn_val_V_1_reg_731 <= {{bckgndYUV_dout[15:8]}};
        pixIn_val_V_2_reg_738 <= {{bckgndYUV_dout[23:16]}};
        pixIn_val_V_3_reg_745 <= {{bckgndYUV_dout[31:24]}};
        pixIn_val_V_4_reg_752 <= {{bckgndYUV_dout[39:32]}};
        pixIn_val_V_5_reg_759 <= {{bckgndYUV_dout[47:40]}};
        pixIn_val_V_reg_724 <= pixIn_val_V_fu_388_p1;
    end
end

always @ (*) begin
    if (((icmp_ln729_fu_341_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_2 = 16'd0;
    end else begin
        ap_sig_allocacmp_x_2 = x_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln729_reg_706 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bckgndYUV_blk_n = bckgndYUV_empty_n;
    end else begin
        bckgndYUV_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_706 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bckgndYUV_read = 1'b1;
    end else begin
        bckgndYUV_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp52) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_tpgPatternBox_fu_305_ap_ce = 1'b1;
    end else begin
        grp_tpgPatternBox_fu_305_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ovrlayYUV_blk_n = ovrlayYUV_full_n;
    end else begin
        ovrlayYUV_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ovrlayYUV_write = 1'b1;
    end else begin
        ovrlayYUV_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ovrlayYUV_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((icmp_ln729_reg_706 == 1'd1) & (bckgndYUV_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ovrlayYUV_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((icmp_ln729_reg_706 == 1'd1) & (bckgndYUV_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp52 = (((ovrlayYUV_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((icmp_ln729_reg_706 == 1'd1) & (bckgndYUV_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ovrlayYUV_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((icmp_ln729_reg_706 == 1'd1) & (bckgndYUV_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln729_reg_706 == 1'd1) & (bckgndYUV_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1_ignore_call0 = ((icmp_ln729_reg_706 == 1'd1) & (bckgndYUV_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = (ovrlayYUV_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5_ignore_call0 = (ovrlayYUV_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_336 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_352 = (~(ovrlayId_load == 8'd1) & ~(ovrlayId_load_read_read_fu_190_p2 == 8'd2) & (icmp_ln729_reg_706 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_pix_val_V_1_reg_283 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_2_reg_272 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_3_reg_261 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_4_reg_250 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_5_reg_239 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_reg_294 = 'bx;

always @ (*) begin
    ap_predicate_op52_call_state2 = ((icmp_ln729_reg_706 == 1'd1) & (ovrlayId_load == 8'd1));
end

always @ (*) begin
    ap_predicate_op52_call_state2_state1 = ((icmp_ln729_fu_341_p2 == 1'd1) & (ovrlayId_load == 8'd1));
end

assign empty_67_fu_553_p3 = ((tobool[0:0] == 1'b1) ? ap_phi_reg_pp0_iter5_pix_val_V_3_reg_261 : select_ln1944_1_fu_546_p3);

assign empty_68_fu_567_p3 = ((tobool[0:0] == 1'b1) ? ap_phi_reg_pp0_iter5_pix_val_V_2_reg_272 : select_ln1948_1_fu_560_p3);

assign empty_69_fu_581_p3 = ((tobool[0:0] == 1'b1) ? ap_phi_reg_pp0_iter5_pix_val_V_1_reg_283 : select_ln1946_1_fu_574_p3);

assign empty_fu_539_p3 = ((tobool[0:0] == 1'b1) ? ap_phi_reg_pp0_iter5_pix_val_V_4_reg_250 : select_ln1946_fu_532_p3);

assign grp_tpgPatternBox_fu_305_ap_start = grp_tpgPatternBox_fu_305_ap_start_reg;

assign grp_tpgPatternBox_fu_305_pixIn = bckgndYUV_dout[7:0];

assign grp_tpgPatternBox_fu_305_pixIn10 = {{bckgndYUV_dout[47:40]}};

assign grp_tpgPatternBox_fu_305_pixIn6 = {{bckgndYUV_dout[15:8]}};

assign grp_tpgPatternBox_fu_305_pixIn7 = {{bckgndYUV_dout[23:16]}};

assign grp_tpgPatternBox_fu_305_pixIn8 = {{bckgndYUV_dout[31:24]}};

assign grp_tpgPatternBox_fu_305_pixIn9 = {{bckgndYUV_dout[39:32]}};

assign icmp_ln1918_1_fu_365_p2 = ((or_ln1918_1_fu_359_p2 == crossHairX_1) ? 1'b1 : 1'b0);

assign icmp_ln1918_fu_347_p2 = ((ap_sig_allocacmp_x_2 == crossHairX_1) ? 1'b1 : 1'b0);

assign icmp_ln729_fu_341_p2 = ((ap_sig_allocacmp_x_2 < loopWidth) ? 1'b1 : 1'b0);

assign or_ln1918_1_fu_359_p2 = (ap_sig_allocacmp_x_2 | 16'd1);

assign or_ln1918_2_fu_371_p2 = (icmp_ln1918_1_fu_365_p2 | cmp2_i);

assign or_ln1918_fu_353_p2 = (icmp_ln1918_fu_347_p2 | cmp2_i);

assign ovrlayId_load_read_read_fu_190_p2 = ovrlayId_load;

assign ovrlayYUV_din = {{{{{{p_0_5_0_0_0170_fu_518_p3}, {empty_fu_539_p3}}, {empty_67_fu_553_p3}}, {empty_68_fu_567_p3}}, {empty_69_fu_581_p3}}, {p_0_0_0_0_0160_fu_525_p3}};

assign p_0_0_0_0_0160_fu_525_p3 = ((tobool[0:0] == 1'b1) ? ap_phi_reg_pp0_iter5_pix_val_V_reg_294 : select_ln1944_fu_504_p3);

assign p_0_5_0_0_0170_fu_518_p3 = ((tobool[0:0] == 1'b1) ? ap_phi_reg_pp0_iter5_pix_val_V_5_reg_239 : select_ln1948_fu_511_p3);

assign pixIn_val_V_fu_388_p1 = bckgndYUV_dout[7:0];

assign select_ln1918_1_fu_477_p3 = ((or_ln1918_reg_710_pp0_iter3_reg[0:0] == 1'b1) ? conv_i_i : pixIn_val_V_1_reg_731_pp0_iter3_reg);

assign select_ln1918_2_fu_482_p3 = ((or_ln1918_reg_710_pp0_iter3_reg[0:0] == 1'b1) ? 8'd240 : pixIn_val_V_reg_724_pp0_iter3_reg);

assign select_ln1918_3_fu_488_p3 = ((or_ln1918_2_reg_717_pp0_iter3_reg[0:0] == 1'b1) ? conv_i_i : pixIn_val_V_5_reg_759_pp0_iter3_reg);

assign select_ln1918_4_fu_493_p3 = ((or_ln1918_2_reg_717_pp0_iter3_reg[0:0] == 1'b1) ? select_ln1929 : pixIn_val_V_4_reg_752_pp0_iter3_reg);

assign select_ln1918_5_fu_498_p3 = ((or_ln1918_2_reg_717_pp0_iter3_reg[0:0] == 1'b1) ? 8'd240 : pixIn_val_V_3_reg_745_pp0_iter3_reg);

assign select_ln1918_fu_472_p3 = ((or_ln1918_reg_710_pp0_iter3_reg[0:0] == 1'b1) ? conv_i_i : pixIn_val_V_2_reg_738_pp0_iter3_reg);

assign select_ln1944_1_fu_546_p3 = ((and4_i[0:0] == 1'b1) ? 8'd0 : ap_phi_reg_pp0_iter5_pix_val_V_3_reg_261);

assign select_ln1944_fu_504_p3 = ((and4_i[0:0] == 1'b1) ? 8'd0 : ap_phi_reg_pp0_iter5_pix_val_V_reg_294);

assign select_ln1946_1_fu_574_p3 = ((and10_i[0:0] == 1'b1) ? 8'd0 : ap_phi_reg_pp0_iter5_pix_val_V_1_reg_283);

assign select_ln1946_fu_532_p3 = ((and10_i[0:0] == 1'b1) ? 8'd0 : ap_phi_reg_pp0_iter5_pix_val_V_4_reg_250);

assign select_ln1948_1_fu_560_p3 = ((and24_i[0:0] == 1'b1) ? 8'd0 : ap_phi_reg_pp0_iter5_pix_val_V_2_reg_272);

assign select_ln1948_fu_511_p3 = ((and24_i[0:0] == 1'b1) ? 8'd0 : ap_phi_reg_pp0_iter5_pix_val_V_5_reg_239);

assign x_3_fu_377_p2 = (ap_sig_allocacmp_x_2 + 16'd2);

endmodule //design_1_v_tpg_0_0_tpgForeground_Pipeline_VITIS_LOOP_729_2
