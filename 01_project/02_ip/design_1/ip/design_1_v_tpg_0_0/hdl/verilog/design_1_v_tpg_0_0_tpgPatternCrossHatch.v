// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_tpg_0_0_tpgPatternCrossHatch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        y,
        x,
        width,
        height,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] y;
input  [15:0] x;
input  [15:0] width;
input  [15:0] height;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
reg   [9:0] yCount_V_2;
reg   [0:0] vHatch;
reg   [9:0] xCount_V_7;
reg   [9:0] xCount_V_6;
wire   [0:0] icmp_ln1404_fu_200_p2;
reg   [0:0] icmp_ln1404_reg_526;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1404_reg_526_pp0_iter1_reg;
wire   [0:0] icmp_ln1404_1_fu_210_p2;
reg   [0:0] icmp_ln1404_1_reg_530;
reg   [0:0] icmp_ln1404_1_reg_530_pp0_iter1_reg;
reg   [0:0] icmp_ln1404_1_reg_530_pp0_iter2_reg;
wire   [0:0] and_ln1404_fu_228_p2;
reg   [0:0] and_ln1404_reg_535;
reg   [0:0] and_ln1404_reg_535_pp0_iter1_reg;
wire   [10:0] ret_fu_248_p2;
wire   [0:0] icmp_ln1428_fu_264_p2;
reg   [0:0] icmp_ln1428_reg_544;
wire   [0:0] icmp_ln1428_1_fu_280_p2;
reg   [0:0] icmp_ln1428_1_reg_550;
reg   [0:0] icmp_ln1428_1_reg_550_pp0_iter1_reg;
reg   [0:0] icmp_ln1428_1_reg_550_pp0_iter2_reg;
wire   [0:0] or_ln1064_fu_390_p2;
reg   [0:0] or_ln1064_reg_557;
reg   [0:0] or_ln1064_reg_557_pp0_iter2_reg;
wire   [0:0] icmp_ln1072_5_fu_428_p2;
reg   [0:0] icmp_ln1072_5_reg_562;
reg   [0:0] icmp_ln1072_5_reg_562_pp0_iter2_reg;
wire   [0:0] icmp_ln1064_2_fu_434_p2;
reg   [0:0] icmp_ln1064_2_reg_566;
reg   [0:0] icmp_ln1064_2_reg_566_pp0_iter2_reg;
wire   [9:0] grp_reg_ap_uint_10_s_fu_176_d;
wire   [9:0] grp_reg_ap_uint_10_s_fu_176_ap_return;
reg    grp_reg_ap_uint_10_s_fu_176_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call9;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call9;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call9;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call9;
wire    ap_block_pp0_stage0_11001_ignoreCallOp14;
reg   [0:0] ap_phi_mux_storemerge1_phi_fu_82_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_storemerge1_reg_78;
reg   [0:0] ap_phi_reg_pp0_iter1_storemerge1_reg_78;
wire   [0:0] ap_phi_mux_empty_phi_fu_94_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_reg_90;
reg   [0:0] ap_phi_reg_pp0_iter1_empty_reg_90;
reg   [0:0] ap_phi_reg_pp0_iter2_empty_reg_90;
reg   [0:0] ap_phi_reg_pp0_iter3_empty_reg_90;
reg   [0:0] ap_phi_mux_agg_result_0_1_phi_fu_105_p6;
wire   [0:0] ap_phi_reg_pp0_iter0_agg_result_0_1_reg_101;
reg   [0:0] ap_phi_reg_pp0_iter1_agg_result_0_1_reg_101;
reg   [0:0] ap_phi_reg_pp0_iter2_agg_result_0_1_reg_101;
reg   [0:0] ap_phi_reg_pp0_iter3_agg_result_0_1_reg_101;
wire   [0:0] or_ln1072_fu_490_p2;
reg   [0:0] ap_phi_mux_agg_result_0_2_phi_fu_117_p4;
wire   [0:0] ap_phi_reg_pp0_iter3_agg_result_0_2_reg_114;
reg   [0:0] ap_phi_mux_agg_result_0_3_phi_fu_127_p4;
wire   [0:0] ap_phi_reg_pp0_iter3_agg_result_0_3_reg_124;
reg   [0:0] ap_phi_mux_agg_result_3_0_phi_fu_138_p4;
wire   [0:0] ap_phi_reg_pp0_iter3_agg_result_3_0_reg_135;
wire    ap_block_pp0_stage0;
wire   [9:0] add_ln885_fu_304_p2;
wire   [0:0] and_ln1409_fu_299_p2;
wire   [9:0] select_ln1072_fu_414_p3;
wire   [9:0] sub_ln886_2_fu_440_p2;
wire   [9:0] add_ln885_6_fu_452_p2;
wire   [9:0] zext_ln1431_fu_464_p1;
wire   [13:0] trunc_ln1396_fu_150_p1;
wire   [13:0] add_ln1396_fu_154_p2;
wire   [9:0] trunc_ln_fu_160_p4;
wire   [13:0] trunc_ln1398_fu_186_p1;
wire   [16:0] zext_ln1398_fu_182_p1;
wire   [16:0] zext_ln1404_fu_196_p1;
wire   [16:0] add_ln1404_fu_216_p2;
wire   [0:0] icmp_ln1404_2_fu_222_p2;
wire   [13:0] add_ln1398_fu_190_p2;
wire   [9:0] tmp_fu_234_p4;
wire   [10:0] zext_ln1541_fu_244_p1;
wire   [16:0] zext_ln1396_fu_146_p1;
wire  signed [16:0] sub29_fu_254_p2;
wire   [16:0] zext_ln1404_1_fu_206_p1;
wire   [16:0] add_ln1428_fu_270_p2;
wire   [17:0] zext_ln1428_fu_276_p1;
wire  signed [17:0] sext_ln1072_fu_260_p1;
wire   [10:0] zext_ln1064_fu_290_p1;
wire   [0:0] icmp_ln1064_fu_294_p2;
wire   [0:0] icmp_ln1072_fu_354_p2;
wire   [0:0] icmp_ln1064_1_fu_366_p2;
wire   [0:0] xor_ln1072_fu_378_p2;
wire   [0:0] and_ln1064_fu_384_p2;
wire   [9:0] sub_ln886_fu_372_p2;
wire   [0:0] xor_ln1428_fu_403_p2;
wire   [0:0] and_ln1072_fu_408_p2;
wire   [9:0] add_ln885_5_fu_360_p2;
wire   [9:0] select_ln1064_fu_395_p3;
wire   [7:0] agg_result_0_3_cast_fu_506_p3;
wire   [7:0] agg_result_3_0_cast_fu_498_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_162;
reg    ap_condition_185;
reg    ap_condition_141;
reg    ap_condition_180;
reg    ap_condition_290;
reg    ap_condition_293;
reg    ap_condition_299;
reg    ap_condition_169;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 yCount_V_2 = 10'd0;
#0 vHatch = 1'd0;
#0 xCount_V_7 = 10'd0;
#0 xCount_V_6 = 10'd0;
end

design_1_v_tpg_0_0_reg_ap_uint_10_s grp_reg_ap_uint_10_s_fu_176(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(grp_reg_ap_uint_10_s_fu_176_d),
    .ap_return(grp_reg_ap_uint_10_s_fu_176_ap_return),
    .ap_ce(grp_reg_ap_uint_10_s_fu_176_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_162)) begin
        if ((icmp_ln1404_1_fu_210_p2 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_agg_result_0_1_reg_101 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_agg_result_0_1_reg_101 <= ap_phi_reg_pp0_iter0_agg_result_0_1_reg_101;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_162)) begin
        if ((1'b1 == ap_condition_185)) begin
            ap_phi_reg_pp0_iter1_empty_reg_90 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_reg_90 <= ap_phi_reg_pp0_iter0_empty_reg_90;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_162)) begin
        if (((icmp_ln1404_1_fu_210_p2 == 1'd0) & (icmp_ln1428_1_fu_280_p2 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_storemerge1_reg_78 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge1_reg_78 <= ap_phi_reg_pp0_iter0_storemerge1_reg_78;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_180)) begin
        if ((1'b1 == ap_condition_141)) begin
            ap_phi_reg_pp0_iter3_empty_reg_90 <= vHatch;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_empty_reg_90 <= ap_phi_reg_pp0_iter2_empty_reg_90;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((1'd1 == and_ln1404_reg_535) & (icmp_ln1404_reg_526 == 1'd0)) | ((icmp_ln1404_1_reg_530 == 1'd1) & (icmp_ln1404_reg_526 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((1'd1 == and_ln1409_fu_299_p2) & (icmp_ln1404_reg_526 == 1'd0) & (1'd0 == and_ln1404_reg_535)) | ((1'd1 == and_ln1409_fu_299_p2) & (icmp_ln1404_1_reg_530 == 1'd0) & (icmp_ln1404_reg_526 == 1'd1)))))) begin
        vHatch <= 1'd1;
    end else if (((icmp_ln1404_1_reg_530 == 1'd1) & (icmp_ln1404_reg_526 == 1'd0) & (1'd0 == and_ln1404_reg_535) & (1'd0 == and_ln1409_fu_299_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vHatch <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_169)) begin
        if ((icmp_ln1404_1_reg_530 == 1'd1)) begin
            xCount_V_6 <= 10'd1;
        end else if ((1'b1 == ap_condition_299)) begin
            xCount_V_6 <= zext_ln1431_fu_464_p1;
        end else if ((1'b1 == ap_condition_293)) begin
            xCount_V_6 <= add_ln885_6_fu_452_p2;
        end else if ((1'b1 == ap_condition_290)) begin
            xCount_V_6 <= sub_ln886_2_fu_440_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_169)) begin
        if ((icmp_ln1404_1_reg_530 == 1'd1)) begin
            xCount_V_7 <= 10'd0;
        end else if ((icmp_ln1404_1_reg_530 == 1'd0)) begin
            xCount_V_7 <= select_ln1072_fu_414_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((1'd1 == and_ln1404_reg_535) & (icmp_ln1404_reg_526 == 1'd0)) | ((icmp_ln1404_1_reg_530 == 1'd1) & (icmp_ln1404_reg_526 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((1'd1 == and_ln1409_fu_299_p2) & (icmp_ln1404_reg_526 == 1'd0) & (1'd0 == and_ln1404_reg_535)) | ((1'd1 == and_ln1409_fu_299_p2) & (icmp_ln1404_1_reg_530 == 1'd0) & (icmp_ln1404_reg_526 == 1'd1)))))) begin
        yCount_V_2 <= 10'd0;
    end else if (((icmp_ln1404_1_reg_530 == 1'd1) & (icmp_ln1404_reg_526 == 1'd0) & (1'd0 == and_ln1404_reg_535) & (1'd0 == and_ln1409_fu_299_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        yCount_V_2 <= add_ln885_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1404_fu_200_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln1404_reg_535 <= and_ln1404_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln1404_reg_535_pp0_iter1_reg <= and_ln1404_reg_535;
        icmp_ln1404_1_reg_530 <= icmp_ln1404_1_fu_210_p2;
        icmp_ln1404_1_reg_530_pp0_iter1_reg <= icmp_ln1404_1_reg_530;
        icmp_ln1404_reg_526 <= icmp_ln1404_fu_200_p2;
        icmp_ln1404_reg_526_pp0_iter1_reg <= icmp_ln1404_reg_526;
        icmp_ln1428_1_reg_550_pp0_iter1_reg <= icmp_ln1428_1_reg_550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_agg_result_0_1_reg_101 <= ap_phi_reg_pp0_iter1_agg_result_0_1_reg_101;
        ap_phi_reg_pp0_iter2_empty_reg_90 <= ap_phi_reg_pp0_iter1_empty_reg_90;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        ap_phi_reg_pp0_iter3_agg_result_0_1_reg_101 <= ap_phi_reg_pp0_iter2_agg_result_0_1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1404_1_reg_530 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1072_5_fu_428_p2 == 1'd0) & (icmp_ln1428_1_reg_550 == 1'd0))) begin
        icmp_ln1064_2_reg_566 <= icmp_ln1064_2_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        icmp_ln1064_2_reg_566_pp0_iter2_reg <= icmp_ln1064_2_reg_566;
        icmp_ln1072_5_reg_562_pp0_iter2_reg <= icmp_ln1072_5_reg_562;
        icmp_ln1404_1_reg_530_pp0_iter2_reg <= icmp_ln1404_1_reg_530_pp0_iter1_reg;
        icmp_ln1428_1_reg_550_pp0_iter2_reg <= icmp_ln1428_1_reg_550_pp0_iter1_reg;
        or_ln1064_reg_557_pp0_iter2_reg <= or_ln1064_reg_557;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1404_1_reg_530 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1428_1_reg_550 == 1'd0))) begin
        icmp_ln1072_5_reg_562 <= icmp_ln1072_5_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1404_1_fu_210_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1428_1_reg_550 <= icmp_ln1428_1_fu_280_p2;
        icmp_ln1428_reg_544 <= icmp_ln1428_fu_264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1404_1_reg_530 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln1064_reg_557 <= or_ln1064_fu_390_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd0) & (icmp_ln1064_2_reg_566_pp0_iter2_reg == 1'd0) & (icmp_ln1072_5_reg_562_pp0_iter2_reg == 1'd0) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd0)) | ((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd0) & (icmp_ln1072_5_reg_562_pp0_iter2_reg == 1'd1) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_agg_result_0_1_phi_fu_105_p6 = or_ln1072_fu_490_p2;
    end else begin
        ap_phi_mux_agg_result_0_1_phi_fu_105_p6 = ap_phi_reg_pp0_iter3_agg_result_0_1_reg_101;
    end
end

always @ (*) begin
    if ((((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd0) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd1)) | ((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd0) & (icmp_ln1064_2_reg_566_pp0_iter2_reg == 1'd1) & (icmp_ln1072_5_reg_562_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_agg_result_0_2_phi_fu_117_p4 = or_ln1072_fu_490_p2;
    end else if (((((ap_phi_mux_empty_phi_fu_94_p4 == 1'd1) & (icmp_ln1064_2_reg_566_pp0_iter2_reg == 1'd0) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd0)) | ((ap_phi_mux_empty_phi_fu_94_p4 == 1'd1) & (icmp_ln1072_5_reg_562_pp0_iter2_reg == 1'd1) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd0))) | ((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd1) & (ap_phi_mux_empty_phi_fu_94_p4 == 1'd1)))) begin
        ap_phi_mux_agg_result_0_2_phi_fu_117_p4 = ap_phi_mux_agg_result_0_1_phi_fu_105_p6;
    end else begin
        ap_phi_mux_agg_result_0_2_phi_fu_117_p4 = ap_phi_reg_pp0_iter3_agg_result_0_2_reg_114;
    end
end

always @ (*) begin
    if (((((ap_phi_mux_empty_phi_fu_94_p4 == 1'd0) & (icmp_ln1064_2_reg_566_pp0_iter2_reg == 1'd0) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd0)) | ((ap_phi_mux_empty_phi_fu_94_p4 == 1'd0) & (icmp_ln1072_5_reg_562_pp0_iter2_reg == 1'd1) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd0))) | ((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd1) & (ap_phi_mux_empty_phi_fu_94_p4 == 1'd0)))) begin
        ap_phi_mux_agg_result_0_3_phi_fu_127_p4 = ap_phi_mux_agg_result_0_1_phi_fu_105_p6;
    end else if ((((ap_phi_mux_empty_phi_fu_94_p4 == 1'd1) | ((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd0) & (icmp_ln1064_2_reg_566_pp0_iter2_reg == 1'd1) & (icmp_ln1072_5_reg_562_pp0_iter2_reg == 1'd0))) | ((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd0) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd1)))) begin
        ap_phi_mux_agg_result_0_3_phi_fu_127_p4 = ap_phi_mux_agg_result_0_2_phi_fu_117_p4;
    end else begin
        ap_phi_mux_agg_result_0_3_phi_fu_127_p4 = ap_phi_reg_pp0_iter3_agg_result_0_3_reg_124;
    end
end

always @ (*) begin
    if (((((ap_phi_mux_empty_phi_fu_94_p4 == 1'd0) & (icmp_ln1064_2_reg_566_pp0_iter2_reg == 1'd0) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd0)) | ((ap_phi_mux_empty_phi_fu_94_p4 == 1'd0) & (icmp_ln1072_5_reg_562_pp0_iter2_reg == 1'd1) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd0))) | ((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd1) & (ap_phi_mux_empty_phi_fu_94_p4 == 1'd0)))) begin
        ap_phi_mux_agg_result_3_0_phi_fu_138_p4 = 1'd0;
    end else if ((((ap_phi_mux_empty_phi_fu_94_p4 == 1'd1) | ((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd0) & (icmp_ln1064_2_reg_566_pp0_iter2_reg == 1'd1) & (icmp_ln1072_5_reg_562_pp0_iter2_reg == 1'd0))) | ((icmp_ln1404_1_reg_530_pp0_iter2_reg == 1'd0) & (icmp_ln1428_1_reg_550_pp0_iter2_reg == 1'd1)))) begin
        ap_phi_mux_agg_result_3_0_phi_fu_138_p4 = 1'd1;
    end else begin
        ap_phi_mux_agg_result_3_0_phi_fu_138_p4 = ap_phi_reg_pp0_iter3_agg_result_3_0_reg_135;
    end
end

always @ (*) begin
    if (((icmp_ln1404_1_reg_530 == 1'd0) & (icmp_ln1064_2_fu_434_p2 == 1'd1) & (icmp_ln1072_5_fu_428_p2 == 1'd0) & (icmp_ln1428_1_reg_550 == 1'd0))) begin
        ap_phi_mux_storemerge1_phi_fu_82_p4 = 1'd0;
    end else begin
        ap_phi_mux_storemerge1_phi_fu_82_p4 = ap_phi_reg_pp0_iter1_storemerge1_reg_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp14) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_ap_uint_10_s_fu_176_ap_ce = 1'b1;
    end else begin
        grp_reg_ap_uint_10_s_fu_176_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1396_fu_154_p2 = (trunc_ln1396_fu_150_p1 + 14'd15);

assign add_ln1398_fu_190_p2 = (trunc_ln1398_fu_186_p1 + 14'd15);

assign add_ln1404_fu_216_p2 = ($signed(zext_ln1398_fu_182_p1) + $signed(17'd131071));

assign add_ln1428_fu_270_p2 = (zext_ln1404_1_fu_206_p1 + 17'd1);

assign add_ln885_5_fu_360_p2 = (xCount_V_7 + 10'd2);

assign add_ln885_6_fu_452_p2 = (xCount_V_6 + 10'd2);

assign add_ln885_fu_304_p2 = (yCount_V_2 + 10'd1);

assign agg_result_0_3_cast_fu_506_p3 = ((ap_phi_mux_agg_result_0_3_phi_fu_127_p4[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign agg_result_3_0_cast_fu_498_p3 = ((ap_phi_mux_agg_result_3_0_phi_fu_138_p4[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign and_ln1064_fu_384_p2 = (xor_ln1072_fu_378_p2 & icmp_ln1064_1_fu_366_p2);

assign and_ln1072_fu_408_p2 = (xor_ln1428_fu_403_p2 & icmp_ln1072_fu_354_p2);

assign and_ln1404_fu_228_p2 = (icmp_ln1404_2_fu_222_p2 & icmp_ln1404_1_fu_210_p2);

assign and_ln1409_fu_299_p2 = (icmp_ln1404_1_reg_530 & icmp_ln1064_fu_294_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_141 = (((icmp_ln1404_reg_526_pp0_iter1_reg == 1'd0) & (1'd0 == and_ln1404_reg_535_pp0_iter1_reg)) | ((icmp_ln1404_1_reg_530_pp0_iter1_reg == 1'd0) & (icmp_ln1404_reg_526_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_condition_162 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_169 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_180 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce));
end

always @ (*) begin
    ap_condition_185 = (((1'd1 == and_ln1404_fu_228_p2) & (icmp_ln1404_fu_200_p2 == 1'd0)) | ((icmp_ln1404_1_fu_210_p2 == 1'd1) & (icmp_ln1404_fu_200_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_290 = ((icmp_ln1404_1_reg_530 == 1'd0) & (icmp_ln1064_2_fu_434_p2 == 1'd0) & (icmp_ln1072_5_fu_428_p2 == 1'd0) & (icmp_ln1428_1_reg_550 == 1'd0));
end

always @ (*) begin
    ap_condition_293 = ((icmp_ln1404_1_reg_530 == 1'd0) & (icmp_ln1072_5_fu_428_p2 == 1'd1) & (icmp_ln1428_1_reg_550 == 1'd0));
end

always @ (*) begin
    ap_condition_299 = (((icmp_ln1404_1_reg_530 == 1'd0) & (icmp_ln1428_1_reg_550 == 1'd1)) | ((icmp_ln1404_1_reg_530 == 1'd0) & (icmp_ln1064_2_fu_434_p2 == 1'd1) & (icmp_ln1072_5_fu_428_p2 == 1'd0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_mux_empty_phi_fu_94_p4 = ap_phi_reg_pp0_iter3_empty_reg_90;

assign ap_phi_reg_pp0_iter0_agg_result_0_1_reg_101 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_reg_90 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge1_reg_78 = 'bx;

assign ap_phi_reg_pp0_iter3_agg_result_0_2_reg_114 = 'bx;

assign ap_phi_reg_pp0_iter3_agg_result_0_3_reg_124 = 'bx;

assign ap_phi_reg_pp0_iter3_agg_result_3_0_reg_135 = 'bx;

assign ap_return_0 = agg_result_0_3_cast_fu_506_p3;

assign ap_return_1 = agg_result_3_0_cast_fu_498_p3;

assign grp_reg_ap_uint_10_s_fu_176_d = ($signed(trunc_ln_fu_160_p4) + $signed(10'd1022));

assign icmp_ln1064_1_fu_366_p2 = ((xCount_V_7 == grp_reg_ap_uint_10_s_fu_176_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln1064_2_fu_434_p2 = ((xCount_V_6 == grp_reg_ap_uint_10_s_fu_176_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln1064_fu_294_p2 = ((zext_ln1064_fu_290_p1 == ret_fu_248_p2) ? 1'b1 : 1'b0);

assign icmp_ln1072_5_fu_428_p2 = ((xCount_V_6 < grp_reg_ap_uint_10_s_fu_176_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln1072_fu_354_p2 = ((xCount_V_7 < grp_reg_ap_uint_10_s_fu_176_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln1404_1_fu_210_p2 = ((x == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1404_2_fu_222_p2 = ((zext_ln1404_fu_196_p1 == add_ln1404_fu_216_p2) ? 1'b1 : 1'b0);

assign icmp_ln1404_fu_200_p2 = ((y == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1428_1_fu_280_p2 = ((zext_ln1428_fu_276_p1 == sext_ln1072_fu_260_p1) ? 1'b1 : 1'b0);

assign icmp_ln1428_fu_264_p2 = ((zext_ln1404_1_fu_206_p1 == sub29_fu_254_p2) ? 1'b1 : 1'b0);

assign or_ln1064_fu_390_p2 = (icmp_ln1428_reg_544 | and_ln1064_fu_384_p2);

assign or_ln1072_fu_490_p2 = (or_ln1064_reg_557_pp0_iter2_reg | ap_phi_reg_pp0_iter3_empty_reg_90);

assign ret_fu_248_p2 = ($signed(zext_ln1541_fu_244_p1) + $signed(11'd2047));

assign select_ln1064_fu_395_p3 = ((or_ln1064_fu_390_p2[0:0] == 1'b1) ? 10'd0 : sub_ln886_fu_372_p2);

assign select_ln1072_fu_414_p3 = ((and_ln1072_fu_408_p2[0:0] == 1'b1) ? add_ln885_5_fu_360_p2 : select_ln1064_fu_395_p3);

assign sext_ln1072_fu_260_p1 = sub29_fu_254_p2;

assign sub29_fu_254_p2 = ($signed(zext_ln1396_fu_146_p1) + $signed(17'd131071));

assign sub_ln886_2_fu_440_p2 = (xCount_V_6 - grp_reg_ap_uint_10_s_fu_176_ap_return);

assign sub_ln886_fu_372_p2 = (xCount_V_7 - grp_reg_ap_uint_10_s_fu_176_ap_return);

assign tmp_fu_234_p4 = {{add_ln1398_fu_190_p2[13:4]}};

assign trunc_ln1396_fu_150_p1 = width[13:0];

assign trunc_ln1398_fu_186_p1 = height[13:0];

assign trunc_ln_fu_160_p4 = {{add_ln1396_fu_154_p2[13:4]}};

assign xor_ln1072_fu_378_p2 = (icmp_ln1072_fu_354_p2 ^ 1'd1);

assign xor_ln1428_fu_403_p2 = (icmp_ln1428_reg_544 ^ 1'd1);

assign zext_ln1064_fu_290_p1 = yCount_V_2;

assign zext_ln1396_fu_146_p1 = width;

assign zext_ln1398_fu_182_p1 = height;

assign zext_ln1404_1_fu_206_p1 = x;

assign zext_ln1404_fu_196_p1 = y;

assign zext_ln1428_fu_276_p1 = add_ln1428_fu_270_p2;

assign zext_ln1431_fu_464_p1 = ap_phi_mux_storemerge1_phi_fu_82_p4;

assign zext_ln1541_fu_244_p1 = tmp_fu_234_p4;

endmodule //design_1_v_tpg_0_0_tpgPatternCrossHatch
